
# Nombre
spring.application.name=pfcdaw

# CONFIGURACIÓN  SERVIDOR
server.port=${SERVER_PORT:8080}

# CONFIGURACIÓN DE BASE DE DATOS
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/panaderiaPFC?useSSL=false&serverTimezone=UTC}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}

# Driver de MySQL 
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# CONFIGURACIÓN DE JPA/HIBERNATE
# Mostrar as consultas SQL en consola
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Crear/actualizar tablas automáticamente
spring.jpa.hibernate.ddl-auto=update

# Dialecto de MySQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# CONFIGURACIÓN DE LOGGING
# logging para ver qué está pasando
logging.level.com.pfcdaw=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
# logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} - %logger{36} - %msg%n

#################################
# CONFIGURACIÓN DE CORS (para el frontend)
# Permitir solicitudes desde el frontend en desarrollo
#spring.web.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:5500
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
#spring.web.cors.allowed-headers=*
####################################
# NOTA: Para CORS conviene añadir un bean WebMvcConfigurer en vez de confiar en estas props.
# Si quieres usar propiedades, algunas versiones de Spring Boot soportan:
# spring.mvc.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:5500
# spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS




